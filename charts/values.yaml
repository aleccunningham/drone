namespace: drone

server:
  image: "drone"
  imageTag: "0.8"
  imageRegistry: "drone"
  admin: appleboy
  debug: true
  ## Configure the service
  service:
    name: drone-service
    type: LoadBalancer
    httpPort: 8000
    grpcPort: 9000


agent:
  name: drone-agent
  image: "drone-agent"
  imageTag: "0.8"
  imageRegistry: "drone"
  replicas: 1
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
  procs:
    max: 1
  keepalive:
    time: "1s"
    timeout: "5s"
  healthcheck: true
  debug:
    enabled: false
    pretty: true

db:
  driver: sqlite3
  source: drone.sqlite
  conf:
    name: data
    mountPath: /var/lib/drone

docker:
  apiVersion: 1.24

dind:
  mountPath: /var/run/docker.sock

gitea:
  enabled: true
  url: "https://try.gitea.io"
  skip:
    verify: true

## Persist data to a persistent volume
persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 8Gi

livenessProbe:
  httpGet:
    path: /healthz
    port: 3000
  initialDelaySeconds: 3
  periodSeconds: 3
